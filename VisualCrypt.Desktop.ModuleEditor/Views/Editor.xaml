<UserControl x:Class="VisualCrypt.Desktop.ModuleEditor.Views.Editor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:commands="clr-namespace:VisualCrypt.Desktop.Shared.Commands;assembly=VisualCrypt.Desktop.Shared"
             xmlns:valueConverters="clr-namespace:VisualCrypt.Desktop.Shared.ValueConverters;assembly=VisualCrypt.Desktop.Shared"
             xmlns:state="clr-namespace:VisualCrypt.Desktop.Shared.App;assembly=VisualCrypt.Desktop.Shared"
             xmlns:views="clr-namespace:VisualCrypt.Desktop.ModuleEditor.Views"
             mc:Ignorable="d"
             
             d:DesignHeight="300" d:DesignWidth="300"
             VerticalAlignment="Stretch" HorizontalAlignment="Stretch" d:DataContext="{d:DesignInstance views:EditorViewModel}">
    <UserControl.Resources>
        <valueConverters:BoolTextWrappingConverter x:Key="BoolTextWrappingConverter" />
    </UserControl.Resources>
    <UserControl.CommandBindings>
        <CommandBinding Command="commands:EditorCommands.Find" CanExecute="CanExecuteFind" Executed="ExecuteFind" />
        <CommandBinding Command="commands:EditorCommands.FindNext" CanExecute="CanExecuteFindNext"
                        Executed="ExecuteFindNext" />
        <CommandBinding Command="commands:EditorCommands.FindPrevious" CanExecute="CanExecuteFindPrevious"
                        Executed="ExecuteFindPrevious" />
        <CommandBinding Command="commands:EditorCommands.Replace" CanExecute="CanExecuteReplace"
                        Executed="ExecuteReplace" />
        <CommandBinding Command="commands:EditorCommands.DeleteLine" CanExecute="CanExecuteDeleteLine"
                        Executed="ExecuteDeleteLine" />
        <CommandBinding Command="commands:EditorCommands.GoTo" CanExecute="CanExecuteGoTo" Executed="ExecuteGoTo" />
        <CommandBinding Command="commands:EditorCommands.InsertDate" CanExecute="CanExecuteInsertDate"
                        Executed="ExecuteInsertDate" />

        <CommandBinding Command="commands:EditorCommands.Font" CanExecute="CanExecuteFont" Executed="ExecuteFont" />

        <CommandBinding Command="commands:EditorCommands.ZoomIn" CanExecute="CanExecuteZoomIn" Executed="ExecuteZoomIn" />
        <CommandBinding Command="commands:EditorCommands.ZoomOut" CanExecute="CanExecuteZoomOut"
                        Executed="ExecuteZoomOut" />
        <CommandBinding Command="commands:EditorCommands.Zoom100" CanExecute="CanExecuteZoom100"
                        Executed="ExecuteZoom100" />

        <CommandBinding Command="commands:EditorCommands.Print" CanExecute="CanExecutePrint" Executed="ExecutePrint" />

    </UserControl.CommandBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <TextBox x:Name="TextBox1"
             Grid.Column="0"
             AcceptsReturn="True"
             AllowDrop="True"
             AcceptsTab="True"
             Text=""
             BorderBrush="{x:Static SystemColors.MenuBarBrush}"
             VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
             Focusable="True"
             TextWrapping="{Binding Source={x:Static state:SettingsManager.EditorSettings}, Path=IsWordWrapChecked, Mode=OneWay, Converter={StaticResource BoolTextWrappingConverter}}"
             SpellCheck.IsEnabled="{Binding Source={x:Static state:SettingsManager.EditorSettings}, Path=IsSpellCheckingChecked, Mode=TwoWay}">

            <!-- TextWrapping="{Binding TextWrapping}"-->
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TextBox}">
                                <Border x:Name="border" Background="White" BorderBrush="{x:Static SystemColors.MenuBarBrush}" CornerRadius="0" BorderThickness="1">
                                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ControlTemplate.Triggers>

                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="Silver"/>
                                    </Trigger>

                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="border" Value="0.15"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="Silver"/>
                                    </Trigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="SelectionOpacity" Value="0.4" />
                            <Setter Property="BorderBrush" Value="{x:Static SystemColors.MenuBarBrush}"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="SelectionOpacity" Value="0.3" />
                            <Setter Property="BorderBrush" Value="{x:Static SystemColors.MenuBarBrush}"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="BorderBrush" Value="{x:Static SystemColors.MenuBarBrush}"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Grid Grid.Column="1"  Background="{DynamicResource BarColorBrush}"
              Visibility="{Binding Source={x:Static state:SettingsManager.EditorSettings}, Path=IsToolAreaChecked, Converter={StaticResource BoolVisibilityConverter}}"
              >
            <Grid.Resources>
                    <ResourceDictionary Source="pack://application:,,,/VisualCrypt.Desktop.Shared;component/Styles/DialogStyles.xaml" />
            </Grid.Resources>

            <Grid>
                <TabControl  Height="Auto" SelectedIndex="{Binding ToolAreaSelectedIndex, Mode=TwoWay}"
                             SelectedItem="{Binding ToolAreaSelectedItem, Mode=TwoWay}"
                             Background="{DynamicResource BarColorBrush}" BorderThickness="0"
                             SelectionChanged="ToolArea_OnSelectionChanged"
                            >
                    <TabItem>
                        <TabItem.Header>
                            <TextBlock Style="{StaticResource DialogH1Style}" Text="Find"></TextBlock>
                        </TabItem.Header>
                        <StackPanel HorizontalAlignment="Stretch">
                            <TextBox Margin="5" x:Name="TextBoxFindFindString"
                             Text="{Binding FindString, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                            <StackPanel HorizontalAlignment="Right">
                                <Button IsDefault="True" Command="{Binding FindNextCommand}">
                                    Find
                                </Button>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Margin="0">
                                    <CheckBox Margin="5" IsChecked="{Binding SearchOptions.MatchCase, Mode=TwoWay}">Match case</CheckBox>
                                    <CheckBox Margin="5" IsChecked="{Binding SearchOptions.MatchWholeWord, Mode=TwoWay}">Match whole word</CheckBox>
                                </StackPanel>
                                <StackPanel Margin="0">
                                    <CheckBox Margin="5" IsChecked="{Binding SearchOptions.SearchUp, Mode=TwoWay}">Search up</CheckBox>
                                    <CheckBox Margin="5" IsChecked="{Binding SearchOptions.UseRegEx, Mode=TwoWay}">Use Regular Expressions</CheckBox>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </TabItem>
                    <TabItem>
                        <TabItem.Header>
                            <TextBlock Style="{StaticResource DialogH1Style}" Text="Replace"></TextBlock>
                        </TabItem.Header>
                        <StackPanel>
                            <TextBox x:Name="TextBoxReplaceFindString" Margin="5"
                             Text="{Binding FindString, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock Margin="5">Replace with:</TextBlock>
                            <TextBox x:Name="TextBoxReplaceString" Margin="5"
                             Text="{Binding ReplaceString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <DockPanel>
                                <TextBlock Margin="5" Text="{Binding PositionString}" />
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button Command="{Binding FindNextCommand}">
                                        Find
                                    </Button>
                                    <Button IsDefault="True"
                                    Command="{Binding ReplaceCommand}">
                                        Replace
                                    </Button>
                                    <Button 
                                    Command="{Binding ReplaceAllCommand}">
                                        Replace all
                                    </Button>
                                </StackPanel>
                            </DockPanel>

                            <StackPanel Orientation="Horizontal">
                                <StackPanel Margin="0">
                                    <CheckBox Margin="5" IsChecked="{Binding SearchOptions.MatchCase, Mode=TwoWay}">Match case</CheckBox>
                                    <CheckBox Margin="5" IsChecked="{Binding SearchOptions.MatchWholeWord, Mode=TwoWay}">Match whole word</CheckBox>
                                </StackPanel>
                                <StackPanel Margin="0">
                                    <CheckBox Margin="5" IsChecked="{Binding SearchOptions.SearchUp, Mode=TwoWay}">Search up</CheckBox>
                                    <CheckBox Margin="5" IsChecked="{Binding SearchOptions.UseRegEx, Mode=TwoWay}">Use Regular Expressions</CheckBox>
                                </StackPanel>
                            </StackPanel>

                        </StackPanel>
                    </TabItem>
                    <TabItem>
                        <TabItem.Header>
                            <TextBlock Style="{StaticResource DialogH1Style}" Text="Go"></TextBlock>
                        </TabItem.Header>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="10,0,0,0">Line Number (1-</TextBlock>
                                <TextBlock Margin="0" Text="{Binding LineCount}"></TextBlock>
                                <TextBlock Margin="0" Text="):"></TextBlock>
                            </StackPanel>
                            <TextBox Margin="5" x:Name="TextBoxGotoString"
                     Text="{Binding LineNo, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                          

                                <Button Margin="5" IsDefault="True" HorizontalAlignment="Right" Width="65"
                         Command="{Binding GoButtonCommand}">
                                    Go
                                </Button>
                            <TextBlock>Ctrl+G | Go </TextBlock>
                            <TextBlock>ESC | Close</TextBlock>
                         
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </Grid>
        </Grid>
    </Grid>
</UserControl>